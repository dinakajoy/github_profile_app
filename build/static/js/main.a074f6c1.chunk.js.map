{"version":3,"sources":["Clock/Clock.js","GithubProfile/CardItem.js","GithubProfile/CardList.js","GithubProfile/AddCard.js","GithubProfile/GithubUserDetails.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","className","toLocaleTimeString","React","Component","CardItem","user","class","style","getDate","getMonth","getDay","getFullYear","to","pathname","card","login","target","rel","src","avatar_url","alt","name","location","created_at","twitter_username","CardList","cards","map","key","id","AddCard","username","saveToLocalStorage","data","a","localStorage","setItem","JSON","stringify","handleSubmit","event","preventDefault","fetch","resp","json","message","alert","onSubmit","type","value","onChange","placeholder","required","GithubUserDetails","repos","loadCard","url","match","params","console","log","loadRepos","bio","datasets","public_repos","following","followers","public_gists","backgroundColor","borderColor","borderWidth","labels","repo","index","homepage","href","description","language","forks_count","stargazers_count","size","Header","Footer","App","addCard","cardData","prevState","values","keys","Object","i","length","push","parse","getItem","exact","path","render","Fragment","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a074f6c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Clock.css';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {date: new Date()};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\" >\r\n        The Time is {this.state.date.toLocaleTimeString()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport './GithubProfile.css';\r\n\r\nclass CardItem extends React.Component {\r\n  user = () => <i class=\"fa fa-user-circle-o\" style=\"font-size:48px;color:red\"></i>;\r\n\r\n  getDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return `Joined ${monthNames[new Date(date).getMonth()]} ${new Date(date).getDay()}, ${new Date(date).getFullYear()}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Link to={{ pathname:/users/+this.props.card.login, card: \"hey\" }} target=\"_BLANK\" rel=\"noopener noreferrer\" className=\"link\">\r\n        <div className=\"card-wrapper\">\r\n          <div className=\"card-img\">\r\n            <img src={this.props.card.avatar_url === null ? this.user : this.props.card.avatar_url} alt={this.props.card.name} />\r\n          </div>\r\n          <div className=\"card-details\">\r\n            <h2>{this.props.card.name}</h2>\r\n            <p><span><i className=\"fa fa-map-marker\"></i></span> <span>{this.props.card.location === null ? 'Not Applicable': this.props.card.location}</span></p>\r\n            <p><span><i className=\"fa fa-calendar\"></i></span> <span>{this.getDate(this.props.card.created_at)}</span></p>\r\n             <p><span><i class=\"fa fa-twitter\"></i></span> <span>{this.props.card.twitter_username === null ? 'Not Applicable': this.props.card.twitter_username}</span></p>\r\n          </div>    \r\n        </div>     \r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardItem;","import React from 'react';\r\nimport CardItem from './CardItem';\r\nimport './GithubProfile.css';\r\n\r\nclass CardList extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className=\"container\">\r\n          <div className=\"cards-wrapper\">\r\n            { this.props.cards.map((card) => <CardItem key={card.id} card={card} /> ) }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './GithubProfile.css';\r\n\r\nclass AddCard extends React.Component {\r\n  state = {\r\n    username: ''\r\n  };\r\n\r\n  saveToLocalStorage = async(data) => {\r\n    localStorage.setItem(data.id, JSON.stringify(data));\r\n  }\r\n\r\n  handleSubmit = async(event) => {\r\n    event.preventDefault();\r\n    const resp = await fetch(`https://api.github.com/users/${this.state.username}`);\r\n    const json = await resp.json();\r\n    if(json.message === \"Not Found\") {\r\n      alert('Sorry, User Was Not Found &#128532;')\r\n    } else {\r\n      await this.saveToLocalStorage(json);\r\n      this.props.onSubmit(json);\r\n      this.setState({ username: '' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit} className=\"container\">\r\n          <input type=\"text\" value={this.state.username} onChange={event=>this.setState({ username: event.target.value })} className=\"username\" placeholder=\"Enter Github Username\" required />\r\n          <button className=\"btn\">Add Github User</button>\r\n        </form>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AddCard;","import React from 'react';\r\nimport './GithubProfile.css';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nclass GithubUserDetails extends React.Component {\r\n  state = {\r\n    card: [],\r\n    repos: []\r\n  }\r\n\r\n  loadCard = async() => {\r\n    try {\r\n      const url = `https://api.github.com/users/${this.props.match.params.id}`;\r\n      const resp = await fetch(url) ;\r\n      const json = await resp.json();\r\n      return this.setState({card: json});\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  loadRepos = async() => {\r\n    try {\r\n      const resp = await fetch(`https://api.github.com/users/${this.props.match.params.id}/repos`);\r\n      const json = await resp.json();\r\n      return this.setState({repos: json});\r\n    } catch(error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadCard();\r\n    await this.loadRepos();\r\n  }\r\n\r\n\r\n  getDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return `Joined ${monthNames[new Date(date).getMonth()]} ${new Date(date).getDay()}, ${new Date(date).getFullYear()}`;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"section-a\">\r\n          <img src={this.state.card.avatar_url} alt={this.state.card.name} />\r\n          <div className=\"detail\">\r\n            <h1>{this.state.card.name}</h1>\r\n            <p>{this.state.card.bio}</p>\r\n            <div className=\"sub-details\">\r\n              <div className=\"sub-details-left\">\r\n                <i className=\"fa fa-map-marker\"></i>\r\n                <span>{this.state.card.location}</span>\r\n              </div>\r\n              <div className=\"sub-details-right\">\r\n                <i className=\"fa fa-calendar\"></i>\r\n                <span>{this.getDate(this.state.card.created_at)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Doughnut \r\n            data={{\r\n              datasets: [{\r\n                data: [this.state.card.public_repos, this.state.card.following, this.state.card.followers, this.state.card.public_gists],\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n              }],\r\n              labels: [\r\n                'Repositories',\r\n                'Following',\r\n                'Followers',\r\n                'Public Gists'\r\n              ],\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"section-b\">\r\n          <h2>{this.state.card.name}'s Repositories </h2><br />\r\n          <div className=\"repo-details\">\r\n            {this.state.repos.map(function(repo, index) {\r\n              return <div className=\"repo_wrapper\">\r\n                {repo.homepage !== '' && <a href={repo.homepage} target=\"_BLANK\" rel=\"noopener noreferrer\" className=\"link2\"><h4><i class=\"fa fa-link\"></i>{'  '}{repo.name}</h4></a>}\r\n                {repo.homepage === '' && <h4><i class=\"fa fa-code\"></i>{'  '}{repo.name}</h4>}\r\n                <p>{repo.description}</p>\r\n                <br />\r\n                <div class=\"repo-group\">\r\n                  {repo.language !== '' && <span><i class=\"fa fa-circle\"></i>{repo.language}</span>}\r\n                  {repo.forks_count !== '' && <span><i class=\"fa fa-code-fork\"></i>{repo.forks_count}</span>}\r\n                  {repo.stargazers_count !== '' && <span><i class=\"fa fa-star\"></i>{repo.stargazers_count}</span>}\r\n                  {repo.size !== '' && <span><i class=\"fa fa-pie-chart\"></i>{repo.size}kb</span>}\r\n                </div>\r\n              </div>\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GithubUserDetails;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Clock from './Clock/Clock';\r\nimport CardList from './GithubProfile/CardList';\r\nimport AddCard from './GithubProfile/AddCard';\r\nimport GithubUserDetails from './GithubProfile/GithubUserDetails';\r\nimport './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h1>Welcome To My First React App</h1>\r\n      <Clock />\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"App-footer\">\r\n      <small>Developed By Odinaka Joy</small>\r\n    </footer>\r\n  )\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: []\r\n    }\r\n  }\r\n  \r\n  addCard = (cardData) => {\r\n    this.setState(prevState => ({\r\n      cards: [...prevState.cards, cardData]\r\n    }))\r\n  }\r\n\r\n  componentDidMount() {\r\n    let values = [];\r\n    let keys = Object.keys(localStorage);\r\n    let i = keys.length;\r\n    while ( i-- ) {\r\n      values.push(JSON.parse(localStorage.getItem(keys[i])));\r\n      this.setState({ cards: values });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ cards: this.state});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <>\r\n          <Header />\r\n          <main>\r\n            <Route exact path=\"/\" render= {props=> (\r\n              <React.Fragment>\r\n                <div className=\"add-card-wrapper\">\r\n                  <AddCard onSubmit={this.addCard} />\r\n                </div>\r\n                <div className=\"content\">\r\n                  <CardList cards={this.state.cards} />\r\n                </div>\r\n              </React.Fragment>\r\n            )} />\r\n            <Route path=\"/users/:id\" component={GithubUserDetails} />\r\n          </main>\r\n          <Footer />\r\n        </>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}